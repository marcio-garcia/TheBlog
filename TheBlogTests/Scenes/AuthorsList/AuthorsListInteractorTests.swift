//
//  AuthorsListInteractorTests.swift
//  TheBlog
//
//  Created by Marcio Garcia on 07/06/20.
//  Copyright (c) 2020 Oxl Tech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TheBlog
import XCTest

class AuthorsListInteractorTests: XCTestCase {
    // MARK: Subject under test
    var sut: AuthorsListInteractor!
  
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupAuthorsListInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
  
    // MARK: Test setup
  
    func setupAuthorsListInteractor() {
        let presenter = AuthorsListPresenter()
        let worker = AuthorsListWorker(service: BlogServiceMock())
        sut = AuthorsListInteractor(presenter: presenter, worker: worker)
        
    }
  
  // MARK: Test doubles
    
    class AuthorsListPresentationLogicSpy: AuthorsListPresentationLogic {
        var presentSomethingCalled = false
    
        func presentAuthors(response: AuthorsList.FetchAuthors.Response) {
            presentSomethingCalled = true
        }
    }
  
    // MARK: Tests
    
    func testDoSomething(){
        // Given
        let spy = AuthorsListPresentationLogicSpy()
        sut.presenter = spy
        let request = AuthorsList.FetchAuthors.Request()
    
        // When
        sut.fetchAuthors(request: request)
    
        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
    }
}
