//
//  AuthorDetailsRouter.swift
//  TheBlog
//
//  Created by Marcio Garcia on 07/06/20.
//  Copyright (c) 2020 Oxl Tech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthorDetailsRoutingLogic {
    var dataStore: AuthorDetailsDataStore? { get }
    func routeToPostDetails()
}

protocol AuthorDetailsDataPassing {
    var dataStore: AuthorDetailsDataStore? { get }
}

class AuthorDetailsRouter: AuthorDetailsRoutingLogic, AuthorDetailsDataPassing {

    weak var viewController: AuthorDetailsViewController?
    var dataStore: AuthorDetailsDataStore?
    var postDetailsBuilder: PostDetailsBuilder
    var imageCache: NSCache<NSString, UIImage>

    init(dataStore: AuthorDetailsDataStore?,
         postDetailsBuilder: PostDetailsBuilder,
         imageCache: NSCache<NSString, UIImage>) {
        self.dataStore = dataStore
        self.postDetailsBuilder = postDetailsBuilder
        self.imageCache = imageCache
    }
 
    // MARK: Routing
    
    func routeToPostDetails() {
        let destinationVC = postDetailsBuilder.build(imageCache: imageCache)
        var destinationDS = destinationVC.router!.dataStore!
        passDataToSomewhere(source: dataStore!, destination: &destinationDS)
        navigateToSomewhere(source: viewController!, destination: destinationVC)
    }

    // MARK: Navigation
    
    func navigateToSomewhere(source: AuthorDetailsViewController, destination: PostDetailsViewController) {
        source.show(destination, sender: nil)
    }
  
    // MARK: Passing data
    
    func passDataToSomewhere(source: AuthorDetailsDataStore, destination: inout PostDetailsDataStore) {
        destination.post = source.selectedPost
    }
}
