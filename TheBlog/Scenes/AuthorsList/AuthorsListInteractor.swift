//
//  AuthorsListInteractor.swift
//  TheBlog
//
//  Created by Marcio Garcia on 07/06/20.
//  Copyright (c) 2020 Oxl Tech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AuthorsListBusinessLogic {
    func fetchFirstAuthors()
    func fetchNextAuthors()
}

protocol AuthorsListDataStore {
}

class AuthorsListInteractor: AuthorsListBusinessLogic, AuthorsListDataStore {
  
    var presenter: AuthorsListPresentationLogic?
    var worker: AuthorsListWorkLogic
  
    var page = 0
    var authorsFirstPage = 50
    var authorsPerPage = 40
    
    // MARK: Object lifecycle
    
    init(presenter: AuthorsListPresentationLogic?, worker: AuthorsListWorkLogic) {
        self.presenter = presenter
        self.worker = worker
    }

    // MARK: Fetch data
  
    func fetchFirstAuthors() {
        page = 1
        performRequest(page: page, authorsPerPage: authorsFirstPage)
    }
    
    func fetchNextAuthors() {
        page += 1
        performRequest(page: page, authorsPerPage: authorsPerPage)
    }
    
    private func performRequest(page: Int, authorsPerPage: Int?) {
        worker.requestAuthors(page: page, authorsPerPage: authorsPerPage) { [weak self] authors, error in
            if let error = error {
                let response = AuthorsList.Error.Response(message: error.localizedDescription)
                self?.presenter?.presentError(response: response)
            }
            guard let authors = authors else { return }
            let response = AuthorsList.FetchAuthors.Response(authors: authors)
            self?.presenter?.presentAuthors(response: response)
        }
    }
}
